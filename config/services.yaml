# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    images_path: '%env(resolve:IMAGES_PATH)%'
    
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app_api.event.jwt_created_listener:
        class: App\EventListener\JWTCreatedListener
        arguments: [ '@request_stack', '@security.token_storage' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }
    
    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

    App\EventListener\EntityBaseListener:
        tags:
            -
                name: 'doctrine.event_listener'
                event: 'prePersist'
                priority: 500
                connection: 'default'

    app.user.listner:
        class: App\EventListener\UserListener
        tags:
            - {name: 'doctrine.event_listener', event: 'prePersist' }
            - {name: 'doctrine.event_listener', event: 'preUpdate' }

    app.doctrine.filter.configurator:
        class: App\Filter\Configurator
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 7 }
